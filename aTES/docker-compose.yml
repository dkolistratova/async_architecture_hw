version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - /Users/daria/Documents/dev/volumes/zookeeper/log/version-2/:/var/lib/zookeeper/log/version-2
      - /Users/daria/Documents/dev/volumes/zookeeper/data/version-2/:/var/lib/zookeeper/data/version-2
    networks:
      - popug-jira

  broker:
    image: confluentinc/cp-kafka:7.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "19092:19092"
      - "29092:29092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,RMOFF_DOCKER_HACK:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092,RMOFF_DOCKER_HACK://host.docker.internal:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - /Users/daria/Documents/dev/volumes/kafka:/var/lib/kafka
    networks:
      - popug-jira

  db:
    image: postgres
    container_name: psql
    ports:
      - "5432:5432"
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - popug-jira

  oauth:
    container_name: oauth
    build: ./auth/.
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    ports:
      - "3000:3000"
    depends_on:
      - db
      - broker
    environment:
      RAILS_ENV: 'development'
      DATABASE_URL: 'postgres://postgres:password@db:5432/postgres'
      KAFKA_URL: 'kafka://broker:29092'
      BROKER_ADAPTER: 'kafka'
    networks:
      - popug-jira

  tasktracker:
    container_name: tasktracker
    build:
      context: ./
      dockerfile: ./tasktracker/Dockerfile
    command: ['go', 'run', 'main.go']
    ports:
      - "3002:3002"
    depends_on:
      - db
      - broker
      - oauth
    environment:
      DATABASE_URL: 'postgres://postgres:password@db:5432/postgres'
      KAFKA_URL: 'kafka://broker:29092'
      BROKER_ADAPTER: 'kafka'
    networks:
      - popug-jira

  billing:
    container_name: billing
    build:
      context: ./
      dockerfile: ./billing/Dockerfile
    command: ['go', 'run', 'main.go']
    ports:
      - "3003:3003"
    depends_on:
      - db
      - broker
      - oauth
    environment:
      DATABASE_URL: 'postgres://postgres:password@db:5432/postgres'
      KAFKA_URL: 'kafka://broker:29092'
      BROKER_ADAPTER: 'kafka'
    networks:
      - popug-jira


# network needs to be created manually, by:
#  docker network create popug-jira
networks:
  popug-jira:
    driver: bridge

